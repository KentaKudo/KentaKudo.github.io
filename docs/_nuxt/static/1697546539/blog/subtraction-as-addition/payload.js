__NUXT_JSONP__("/blog/subtraction-as-addition", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au){return {data:[{page:{slug:"subtraction-as-addition",description:"In modern computing system, a technique called two's complement is used to represent negative integers. The reason it's so commonly used is it makes computing system much simpler. In this post, I'd like to show what two's complement is and how it helps keeping it simple.",title:"Subtraction as Addition",language:"en\u002FGB",tags:["computerscience","systemprogramming","twoscomplement"],image:{src:"complementary.jpg",alt:"An orange coloured in blue outside (complementary colours)",credit:"Photo by \u003Ca href=\"https:\u002F\u002Funsplash.com\u002F@davisuko?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\"\u003Edavisuko\u003C\u002Fa\u003E on \u003Ca href=\"https:\u002F\u002Funsplash.com\u002Fs\u002Fphotos\u002Fcomplementary-colors?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\"\u003EUnsplash\u003C\u002Fa\u003E"},createdAt:"2022-01-30T00:00:00.000Z",toc:[{id:G,depth:H,text:I},{id:J,depth:H,text:K},{id:L,depth:3,text:M}],body:{type:"root",children:[{type:b,tag:h,props:{},children:[{type:a,value:"To make the discussion simple I'm going to use 4 bit integer, "},{type:b,tag:g,props:{},children:[{type:a,value:N}]},{type:a,value:" throughout the post."}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:"NOTE: I expect you to have a basic understanding of binary number system. If you're not familiar with it, take a moment and have a look at "},{type:b,tag:i,props:{href:"https:\u002F\u002Fwww.mathsisfun.com\u002Fbinary-number-system.html",rel:[O,P,Q],target:R},children:[{type:a,value:"this article"}]},{type:a,value:" first."}]},{type:a,value:f},{type:b,tag:S,props:{id:G},children:[{type:b,tag:i,props:{href:"#whats-twos-complement",ariaHidden:r,tabIndex:s},children:[{type:b,tag:t,props:{className:[u,v]},children:[]}]},{type:a,value:I}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:"It's one way of representing signed integers"},{type:b,tag:T,props:{id:"fnref-1"},children:[{type:b,tag:i,props:{href:"#fn-1",className:[U]},children:[{type:a,value:w}]}]},{type:a,value:x},{type:b,tag:g,props:{},children:[{type:a,value:N}]},{type:a,value:" can represent "},{type:b,tag:g,props:{},children:[{type:a,value:"2^4 = 16"}]},{type:a,value:" different numbers, and two's complement assigns 16 integers ranging from -8 to 7 to each bit pattern. The mapping rules go like this:"}]},{type:a,value:f},{type:b,tag:"ul",props:{},children:[{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"Map from 0 to 7 to binary numbers starting from "},{type:b,tag:g,props:{},children:[{type:a,value:l}]},{type:a,value:" to "},{type:b,tag:g,props:{},children:[{type:a,value:y}]},{type:a,value:". This is same as how we represent positive integers in binary."}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"For negative numbers, assign the smallest negative number -8 to "},{type:b,tag:g,props:{},children:[{type:a,value:z}]},{type:a,value:", then assign -7 to the one bigger binary "},{type:b,tag:g,props:{},children:[{type:a,value:m}]},{type:a,value:", -6 to "},{type:b,tag:g,props:{},children:[{type:a,value:A}]},{type:a,value:" â€¦and so on up to "},{type:b,tag:g,props:{},children:[{type:a,value:n}]},{type:a,value:x},{type:b,tag:g,props:{},children:[{type:a,value:n}]},{type:a,value:" is going to be -1."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:"If they aren't very clear, have a look at the table showing full mapping below and examine the rules again."}]},{type:a,value:V},{type:b,tag:W,props:{},children:[{type:b,tag:X,props:{},children:[{type:b,tag:e,props:{},children:[{type:b,tag:o,props:{align:c},children:[{type:a,value:Y}]},{type:b,tag:o,props:{align:c},children:[{type:a,value:Z}]}]}]},{type:b,tag:_,props:{},children:[{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:$}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:y}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:aa}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:ab}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:ac}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:p}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:ad}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:ae}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:af}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:ag}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:B}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:ah}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:w}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:C}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:ai}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:l}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:aj}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:n}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:ak}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:al}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:am}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:D}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:an}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:ao}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:ap}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:E}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:aq}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:A}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:ar}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:m}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:"-8"}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:z}]}]}]}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:"Just by looking at it, it doesn't make much sense why it does such a tricky mapping for negative numbers. There's a reason powerful enough to justify this trickiness."}]},{type:a,value:f},{type:b,tag:S,props:{id:J},children:[{type:b,tag:i,props:{href:"#why-is-it-so-widely-used",ariaHidden:r,tabIndex:s},children:[{type:b,tag:t,props:{className:[u,v]},children:[]}]},{type:a,value:K}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:"The reason why two's complement is widely used is it makes hardware simple in a way that "},{type:b,tag:F,props:{},children:[{type:a,value:"it enables hardware to use the addition unit to also calculate subtraction"}]},{type:a,value:q}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:"You may be surprised to know that computers don't do subtraction. What it actually does instead is addition of the negative number. For example, "},{type:b,tag:g,props:{},children:[{type:a,value:"5 - 3"}]},{type:a,value:" is calculated as "},{type:b,tag:g,props:{},children:[{type:a,value:j}]},{type:a,value:" inside a computer. By converting subtraction to addition, it's now free from minding how to go about subtraction, which is a big deal from hardware engineering point of view."}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:"However, we need to carefully pick a way to represent negative numbers in order to get correct answers. Two's complement is one of such representations"},{type:b,tag:T,props:{id:"fnref-2"},children:[{type:b,tag:i,props:{href:"#fn-2",className:[U]},children:[{type:a,value:B}]}]},{type:a,value:" that makes it happen. Let's look at an example."}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:"Let's do "},{type:b,tag:g,props:{},children:[{type:a,value:j}]},{type:a,value:". In two's complement 5 and -3 are represented as "},{type:b,tag:g,props:{},children:[{type:a,value:p}]},{type:a,value:as},{type:b,tag:g,props:{},children:[{type:a,value:D}]},{type:a,value:" respectively. The addition of these two is "},{type:b,tag:g,props:{},children:[{type:a,value:"0101 + 1101 = 0010"}]},{type:a,value:". If you look back at the table in the previous section, you can find it represents 2, which "},{type:b,tag:F,props:{},children:[{type:a,value:"corresponds to the answer of "},{type:b,tag:g,props:{},children:[{type:a,value:j}]}]},{type:a,value:q}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:"You may still wonder \"so what? what's so special about this?\" because my first impression was like that. Let's see what happens if it did NOT use two's complement."}]},{type:a,value:f},{type:b,tag:"h3",props:{id:L},children:[{type:b,tag:i,props:{href:"#another-way-of-representing-minus-numbers",ariaHidden:r,tabIndex:s},children:[{type:b,tag:t,props:{className:[u,v]},children:[]}]},{type:a,value:M}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:"I'm going to use the first bit solely as a flag that indicates sign: 0 to be positive, and 1 to be negative. The rest of three bits are used to represent number part, for example, "},{type:b,tag:g,props:{},children:[{type:a,value:C}]},{type:a,value:" is 1 and "},{type:b,tag:g,props:{},children:[{type:a,value:m}]},{type:a,value:" is -1."}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:"This is the mapping table of this system."}]},{type:a,value:V},{type:b,tag:W,props:{},children:[{type:b,tag:X,props:{},children:[{type:b,tag:e,props:{},children:[{type:b,tag:o,props:{align:c},children:[{type:a,value:Y}]},{type:b,tag:o,props:{align:c},children:[{type:a,value:Z}]}]}]},{type:b,tag:_,props:{},children:[{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:$}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:y}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:aa}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:ab}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:ac}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:p}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:ad}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:ae}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:af}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:ag}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:B}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:ah}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:w}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:C}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:ai}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:l}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:"-0"}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:z}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:aj}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:m}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:ak}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:A}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:am}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:E}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:an}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:ao}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:ap}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:D}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:aq}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:al}]}]},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{align:c},children:[{type:a,value:ar}]},{type:b,tag:d,props:{align:c},children:[{type:a,value:n}]}]}]}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:"Probably this is more intuitive way of representing negative numbers. This system is called "},{type:b,tag:"em",props:{},children:[{type:a,value:"signed magnitude representation"}]},{type:a,value:", and was actually used in early computers. Be aware "},{type:b,tag:F,props:{},children:[{type:a,value:"it has two zeros"}]},{type:a,value:q}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:"Now let's see how "},{type:b,tag:g,props:{},children:[{type:a,value:j}]},{type:a,value:" looks like in this system."}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:"In this system, 5 and -3 are represented "},{type:b,tag:g,props:{},children:[{type:a,value:p}]},{type:a,value:as},{type:b,tag:g,props:{},children:[{type:a,value:E}]},{type:a,value:" respectively. If we add these two binary numbers, the result is "},{type:b,tag:g,props:{},children:[{type:a,value:"0101 + 1011 = 0000"}]},{type:a,value:x},{type:b,tag:g,props:{},children:[{type:a,value:l}]},{type:a,value:" is simply 0, which is clearly wrong answer for "},{type:b,tag:g,props:{},children:[{type:a,value:j}]},{type:a,value:q}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:"This means it can't use the addition hardware to perform this calculation, and to get the right answer it needs another hardware dedicated for subtraction."}]},{type:a,value:f},{type:b,tag:h,props:{},children:[{type:a,value:"Being able to calculate subtraction as addition is a very unique characteristic two's complement has, and it's the reason why it's so popular in computing systems."}]},{type:a,value:f},{type:b,tag:"aside",props:{},children:[{type:a,value:"\nIndeed, "},{type:b,tag:"i",props:{},children:[{type:a,value:"method of complement"}]},{type:a,value:" (ones' complement, two's complement, etc) is "},{type:b,tag:"b",props:{},children:[{type:a,value:"designed to implement subtraction as addition"}]},{type:a,value:" of its complement number.\n"}]},{type:a,value:f},{type:b,tag:"div",props:{className:["footnotes"]},children:[{type:a,value:f},{type:b,tag:"hr",props:{},children:[]},{type:a,value:f},{type:b,tag:"ol",props:{},children:[{type:a,value:f},{type:b,tag:k,props:{id:"fn-1"},children:[{type:a,value:"Signed numbers: Numbers that consist of both positive and negative numbers"},{type:b,tag:i,props:{href:"#fnref-1",className:[at]},children:[{type:a,value:au}]}]},{type:a,value:f},{type:b,tag:k,props:{id:"fn-2"},children:[{type:a,value:"Ones' complement is another way to realise subtraction as addition. See "},{type:b,tag:i,props:{href:"https:\u002F\u002Fstackoverflow.com\u002Fquestions\u002F11054213\u002Fadvantage-of-2s-complement-over-1s-complement",rel:[O,P,Q],target:R},children:[{type:a,value:"Stack Overflow â€” Advantage of 2's complement over 1's complement?"}]},{type:a,value:" if you're interested in why two's complement is more preferred."},{type:b,tag:i,props:{href:"#fnref-2",className:[at]},children:[{type:a,value:au}]}]},{type:a,value:f}]},{type:a,value:f}]}]},dir:"\u002Fblog",path:"\u002Fblog\u002Fsubtraction-as-addition",extension:".md",updatedAt:"2023-03-31T03:01:52.247Z",bodyPlainText:"\nTo make the discussion simple I'm going to use 4 bit integer, `int4` throughout the post.\n\nNOTE: I expect you to have a basic understanding of binary number system. If you're not familiar with it, take a moment and have a look at [this article](https:\u002F\u002Fwww.mathsisfun.com\u002Fbinary-number-system.html) first.\n\n## What's two's complement?\n\nIt's one way of representing signed integers[^1]. `int4` can represent `2^4 = 16` different numbers, and two's complement assigns 16 integers ranging from -8 to 7 to each bit pattern. The mapping rules go like this:\n\n- Map from 0 to 7 to binary numbers starting from `0000` to `0111`. This is same as how we represent positive integers in binary.\n- For negative numbers, assign the smallest negative number -8 to `1000`, then assign -7 to the one bigger binary `1001`, -6 to `1010` â€¦and so on up to `1111`. `1111` is going to be -1.\n\nIf they aren't very clear, have a look at the table showing full mapping below and examine the rules again.\n\n| Decimal | Binary |\n| :-----: | :----: |\n|    7    |  0111  |\n|    6    |  0110  |\n|    5    |  0101  |\n|    4    |  0100  |\n|    3    |  0011  |\n|    2    |  0010  |\n|    1    |  0001  |\n|    0    |  0000  |\n|   -1    |  1111  |\n|   -2    |  1110  |\n|   -3    |  1101  |\n|   -4    |  1100  |\n|   -5    |  1011  |\n|   -6    |  1010  |\n|   -7    |  1001  |\n|   -8    |  1000  |\n\nJust by looking at it, it doesn't make much sense why it does such a tricky mapping for negative numbers. There's a reason powerful enough to justify this trickiness.\n\n## Why is it so widely used?\n\nThe reason why two's complement is widely used is it makes hardware simple in a way that **it enables hardware to use the addition unit to also calculate subtraction**.\n\nYou may be surprised to know that computers don't do subtraction. What it actually does instead is addition of the negative number. For example, `5 - 3` is calculated as `5 + (-3)` inside a computer. By converting subtraction to addition, it's now free from minding how to go about subtraction, which is a big deal from hardware engineering point of view.\n\nHowever, we need to carefully pick a way to represent negative numbers in order to get correct answers. Two's complement is one of such representations[^2] that makes it happen. Let's look at an example.\n\nLet's do `5 + (-3)`. In two's complement 5 and -3 are represented as `0101` and `1101` respectively. The addition of these two is `0101 + 1101 = 0010`. If you look back at the table in the previous section, you can find it represents 2, which **corresponds to the answer of `5 + (-3)`**.\n\nYou may still wonder \"so what? what's so special about this?\" because my first impression was like that. Let's see what happens if it did NOT use two's complement.\n\n### Another way of representing minus numbers\n\nI'm going to use the first bit solely as a flag that indicates sign: 0 to be positive, and 1 to be negative. The rest of three bits are used to represent number part, for example, `0001` is 1 and `1001` is -1.\n\nThis is the mapping table of this system.\n\n| Decimal | Binary |\n| :-----: | :----: |\n|    7    |  0111  |\n|    6    |  0110  |\n|    5    |  0101  |\n|    4    |  0100  |\n|    3    |  0011  |\n|    2    |  0010  |\n|    1    |  0001  |\n|    0    |  0000  |\n|   -0    |  1000  |\n|   -1    |  1001  |\n|   -2    |  1010  |\n|   -3    |  1011  |\n|   -4    |  1100  |\n|   -5    |  1101  |\n|   -6    |  1110  |\n|   -7    |  1111  |\n\nProbably this is more intuitive way of representing negative numbers. This system is called _signed magnitude representation_, and was actually used in early computers. Be aware **it has two zeros**.\n\nNow let's see how `5 + (-3)` looks like in this system.\n\nIn this system, 5 and -3 are represented `0101` and `1011` respectively. If we add these two binary numbers, the result is `0101 + 1011 = 0000`. `0000` is simply 0, which is clearly wrong answer for `5 + (-3)`.\n\nThis means it can't use the addition hardware to perform this calculation, and to get the right answer it needs another hardware dedicated for subtraction.\n\nBeing able to calculate subtraction as addition is a very unique characteristic two's complement has, and it's the reason why it's so popular in computing systems.\n\n\u003Caside\u003E\nIndeed, \u003Ci\u003Emethod of complement\u003C\u002Fi\u003E (ones' complement, two's complement, etc) is \u003Cb\u003Edesigned to implement subtraction as addition\u003C\u002Fb\u003E of its complement number.\n\u003C\u002Faside\u003E\n\n[^1]: Signed numbers: Numbers that consist of both positive and negative numbers\n[^2]: Ones' complement is another way to realise subtraction as addition. See [Stack Overflow â€” Advantage of 2's complement over 1's complement?](https:\u002F\u002Fstackoverflow.com\u002Fquestions\u002F11054213\u002Fadvantage-of-2s-complement-over-1s-complement) if you're interested in why two's complement is more preferred.\n"}}],fetch:{},mutations:void 0}}("text","element","center","td","tr","\n","code","p","a","5 + (-3)","li","0000","1001","1111","th","0101",".","true",-1,"span","icon","icon-link","1",". ","0111","1000","1010","2","0001","1101","1011","strong","whats-twos-complement",2,"What's two's complement?","why-is-it-so-widely-used","Why is it so widely used?","another-way-of-representing-minus-numbers","Another way of representing minus numbers","int4","nofollow","noopener","noreferrer","_blank","h2","sup","footnote-ref","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","table","thead","Decimal","Binary","tbody","7","6","0110","5","4","0100","3","0011","0010","0","-1","-2","1110","-3","-4","1100","-5","-6","-7"," and ","footnote-backref","â†©")));